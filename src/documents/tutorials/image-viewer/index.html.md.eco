---
layout: single-doc
title: Image Viewer
tags: 'image-viewer'
index: true
description: Allows users to view and navigate through a collection of images.
---

#### Getting Started

First load the seed file if you haven't yet.

``` html
<script src="<%= @getCdnSeed() %>"></script>
```

Then initialize AlloyUI and load the Image Viewer module.

``` javascript
YUI().use('aui-image-viewer', function (Y) {
  // code goes here
});
```
---

#### Using Image Viewer

Image Viewer uses images that are linked in the HTML:

``` html
<div id="gallery">
  <!-- Image being displayed with Image Viewer -->
  <a href="image-1.jpg">
    <!-- Thumbnail of image to be displayed -->
    <img src="image-1-thumbnail.jpg" />
  </a>
  <a href="image-2.jpg">
    <img src="image-2-thumbnail.jpg" />
  </a>
  <a href="image-3.jpg">
    <img src="image-3-thumbnail.jpg" />
  </a>
</div>
```

Create a new instance of Image Viewer referecing the linked images in the HTML, and render it!

``` javascript
YUI().use('aui-image-viewer', function (Y) {
  new Y.ImageViewer({
    links: '#gallery a'
  }).render();
});
```

#### Using Image Gallery

You can also use a very similar module called Image Gallery to navigate and possibly cycling through a collection of images. Just need to link those images in the HTML, and render it!

``` javascript
YUI().use('aui-image-viewer-gallery', function (Y) {
  new Y.ImageGallery({
    links: '#myGallery a'
  }).render();
});
```

---

#### Configuring Image Viewer

Parameters can be passed into your instance of Image Viewer to change attributes such as image captions, image positioning, and when images within the viewer are loaded.

``` javascript
YUI().use('aui-image-viewer', function (Y) {
  new Y.ImageViewer({
    // captionFromTitle uses the DOM title attibute as image caption
    captionFromTitle: true,
    centered: false
    links: '#gallery a',
    preloadAllImages: true
    // or preloadNeighborImages: true
  }).render();
});
```

Further configuration includes declaring what elements are to be used to house the caption, navigation arrows, close button, and even the loader, which houses the image being displayed.

<div class="aui-alert aui-alert-info">
  <strong>Note:</strong> when attributes such as `loader`, `arrowLeftEl`, etc., are not specified, the HTML element is generated by Image Viewer.
</div>

``` javascript
YUI().use('aui-image-viewer', function (Y) {
  new Y.ImageViewer({
    arrowLeftEl: '#arrowLeft',
    arrowRightEl: '#arrowRight',
    captionEl: '#caption',
    closeEl: '#close',
    links: '#gallery a',
    loader: '#loader'
  }).render();
});
```

<div class="aui-alert aui-alert-success">
  For more information about configuration, check out our <a href="<%= @getSiteUrl() %>/api/">API Docs</a>.
</div>