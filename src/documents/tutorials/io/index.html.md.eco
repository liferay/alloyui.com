---
layout: single-doc
title: I/O
tags: 'io'
index: true
description: Allows you to make asynchronous HTTP (Ajax) requests.
---

#### Getting Started

First load the seed file, if you haven't yet.

``` html
<script src="<%= @getCdnSeed() %>"></script>
```

Then initialize AlloyUI and load the I/O module.

``` javascript
YUI().use('aui-io-request', function (Y) {
  // code goes here
});
```

---

#### Using I/O

Make an asynchronous request and get the response data.

``` javascript
YUI().use('aui-io-request', function (Y) {
  Y.io.request('example.json', {
    on: {
      success: function () {
        var data = this.get('responseData');
      }
    }
  });
});
```

---

#### Configuring I/O

There are some other options that you can pass to your I/O method.

For example, you can specify the type of the request (e.g., xml, json, javascript, text).

``` javascript
YUI().use('aui-io-request', function (Y) {
  Y.io.request('example.xml', {
    dataType: 'xml',
    on: {
      success: function () {
        var data = this.get('responseData');
      }
    }
  });
});
```

Also, you can set `cache` to `false` so the current timestamp will be appended to the url, preventing the url from being cached.

``` javascript
YUI().use('aui-io-request', function (Y) {
  Y.io.request('example.xml', {
    cache: 'false',
    on: {
      success: function () {
        var data = this.get('responseData');
      }
    }
  });
});
```

<div class="aui-alert aui-alert-success">
  For more information about configuration, check out our <a href="<%= @getSiteUrl() %>/api/">API Docs</a>.
</div>