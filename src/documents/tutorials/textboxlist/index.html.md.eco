---
ignored: true
layout: single-doc
title: Textbox List
tags: 'textboxlist'
index: true
description: Displays users' choices to them as a graphic list.
---

#### Getting Started

First load the seed file, if you haven't yet.

``` html
<script src="<%= @getCdnSeed() %>"></script>
```

Then initialize AlloyUI and load the Textbox List module.

``` javascript
AUI().use('aui-textboxlist', function (A) {
  // code goes here
});
```

---

#### Using Textbox List

Create an HTML element:

``` html
<div id="myList"></div>
```

Now create a new instance of Textbox List component, then tell `contentBox` where it's going to be attached and populate some suggestions by adding a simple JavaScript array to `dataSource`. Finally, let's render it!

``` javascript
AUI().use('aui-textboxlist', function (A) {
  var textboxlist = new A.TextboxList({
    contentBox: '#myList',
    dataSource: ['America', 'Europe', 'Asia']
  }).render();
});
```

<div class="aui-alert aui-alert-info">
  <strong>Note:</strong> you could also use `boundingBox`, instead of `contentBox`, to initialize.<br>
  Read more about the [differences between them](https://github.com/liferay/alloy-ui/wiki/FAQs).
</div>

---

#### Configuring Textbox List

There are some other options that you can pass to your Textbox List instance.

For example, if you set `typeAhead` to `true`, the input field should be automatically updated with the first result as the user types, automatically selecting the portion of the text the user has not typed yet.

``` javascript
AUI().use('aui-textboxlist', function (A) {
  var textboxlist = new A.TextboxList({
    contentBox: '#myList',
    dataSource: ['America', 'Europe', 'Asia'],
    typeAhead: true
  }).render();
});
```

You can even define a more specific `schema` and add the `matchKey` option to choose the key or numeric index on the schema to match the result against.

``` javascript
var states = [[
  'AL',
  'Alabama',
  'The Heart of Dixie'
], [
  'MA',
  'Massachusetts',
  'The Spirit of America'
], [
  'WY',
  'Wyoming',
  'Like No Place on Earth'
]];

AUI().use('aui-textboxlist', function (A) {
  var textboxlist = new A.TextboxList({
    contentBox: '#myList',
    dataSource: states,
    matchKey: 'name',
    schema: {
      resultFields: ['key', 'name', 'description']
    }
  }).render();
});
```

<div class="aui-alert aui-alert-success">
  For more information about configuration, check out our <a href="<%= @getSiteUrl() %>/api/">API Docs</a>.
</div>