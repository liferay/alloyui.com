---
layout: single-doc
title: Data Table
tags: 'datatable'
category: Data Table
description: Provides the user with a method of organizing, arranging, and editing tables of information.
---

#### Getting Started

First load the seed file, if you haven't yet.

``` html
<script src="<%= @getCdnSeed() %>"></script>
```

Then initialize AlloyUI and load the Data Table module.

``` javascript
AUI().use(
  'aui-datatable',
  function(A) {
    // code goes here
  }
);
```

---

#### Using Data Table

Create an HTML element to house the Data Table.

``` html
<div id="myDataTable"></div>
```

The most basic of tables require two kinds of information, table columns and data. Pass both into your Data Table after `columns` and `data`, and don't forget to render it!

``` javascript
AUI().use(
  'aui-datatable',
  function(A) {
    var columns = [name, age];

    var data = [
      {name: 'Bob', age: '28'},
      {name: 'Joe', age: '72'},
      {name: 'Sarah', age: '35'}
    ];

    new A.DataTable(
      {
        columns: columns,
        data: data
      }
    ).render('#myDataTable');
  }
);
```
---

#### Configuring Data Table

A plugin can be utilized to allow the highlighting of table cells.

``` javascript
AUI().use(
  'aui-datatable',
  function(A) {
    new A.DataTable(
      {
        columns: columns,
        data: data,
        plugins: [
          {
            fn: A.Plugin.DataTableHighlight
          }
        ]
      }
    ).render('#myDataTable');
  }
);
```

Table cells can also be edited when permitted in the columns object. Here, `key` refers to the value displayed in the column head.

``` javascript
AUI().use(
  'aui-datatable',
  function(A) {
    var columns = [
      {
        editor: new A.TextAreaCellEditor(),
        key: 'name'
      },
      {
        editor: new A.DateCellEditor(),
        key: 'date'
      }
    ];

    new A.DataTable(
      {
        columns: columns,
        data: data
      }
    ).render('#myDataTable');
  }
);
```

<div class="alert alert-info">
  <strong>Note:</strong> more editors are available for different types of data, such as drop down selectors, and radio buttons. See Data Table examples for available editors.
</div>

Columns can also be set to sort when the component `datatable-sort` is passed in, and `sortable` is set to `true` in the columns object.

``` javascript
AUI().use(
  'aui-datatable',
  'datatable-sort',
  function(A) {
    var columns = [
      {
        key: 'name',
        sortable: true
      },
      {
        key: 'date',
        sortable: true
      }
    ];

    new A.DataTable(
      {
        columns: columns,
        data: data
      }
    ).render('#myDataTable');
  }
);
```

<div class="alert alert-success">
  For more information about configuration, check out our <a href="<%= @getSiteUrl() %>/api/">API Docs</a>.
</div>