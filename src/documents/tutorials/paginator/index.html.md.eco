---
layout: single-doc
title: Paginator
tags: 'paginator'
---

# Paginator

The Paginator provides a set of controls to navigate through paged data.

---

#### Getting Started

First load the seed file, if you haven't yet.

``` html
<script src="<%= @cdn %>"></script>
```

Then initialize AlloyUI and load the Paginator module.

``` javascript
AUI().use('aui-paginator', function(A) {
  // code goes here
});
```

---

#### Using Paginator

The Paginator can be set in any number of `containers`, right now we'll use just one.

``` html
<div class="paginator"></div>
```

Now let's initialize a new instance of Paginator, setting the options `containers` and `total`.

``` javascript
AUI().use('aui-paginator', function(A) {

  new A.Paginator({
    containers: '.paginator',
    total: 10
  }).render();

});
```

As is, the paginator will render, but won't do anything! You must specify what you want the paginator to do on the `changeRequest` event, which fires every time the user clicks on a new page. Here we will set the state of the Paginator on `changeRequest`.

``` javascript
AUI().use('aui-paginator', function(A) {

  new A.Paginator({
    containers: '.paginator',
    total: 10,
    on: {
      changeRequest: function(event) {
        this.setState(event.state);
      }
    }
  }).render();

});
```

Now as the user clicks on the different pages, the state of the paginator will change to the selected page.

---

#### Configuring Paginator

There are many configuration options that can be passed into Paginator, such as `maxPageLinks`, which sets the total amount of links displayed at a time, `rowsPerPageOptions`, which can be used to change the amount of pages displayed at once, and `circular`, allowing the user to navigate from the last page to the first by clicking next.

``` javascript
AUI().use('aui-paginator', function(A) {

  new A.Paginator({
    containers: '.paginator',
    total: 10,
    maxPageLinks: 5,
    circular: true,
    rowsPerPageOptions: [1, 3, 5, 7],
    on: {
      changeRequest: function(event) {
        this.setState(event.state);
      }
    }
  }).render();

});
```

So far we have shown how to initialize and configure the Paginator, but it still isn't interacting with any page content! That's up to you: Paginator can be utilized to paginate through content from markup, or generated content, such as an IO request.

These actions can take place within `changeRequest`, utilizing `event.state.page`, `event.state.rowsPerPage`, etc. Check out the examples for how these changes can be executed.

Here is a very basic example of how a paginator may be used to change the content of a page.

``` javascript
AUI().use('aui-paginator', function(A) {

  //grabbing a node to be used for content
  var content = A.one('.content');

  new A.Paginator({
    containers: '.paginator',
    total: 4,
    on: {
      changeRequest: function(event) {
        var newState = event.state;

        this.setState(newState);

        //setting the content of the node to the current page number
        content.html(event.state.page);
      }
    }
  }).render();

});
```

<div class="alert alert-success">
  For more information about configuration, check out our <a href="http://deploy.alloyui.com/api/">API Docs</a>.
</div>